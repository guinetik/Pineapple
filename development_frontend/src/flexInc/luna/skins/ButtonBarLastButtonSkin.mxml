<?xml version="1.0" encoding="utf-8"?>

<!--
FlexInc. 2012
http://www.loziosecchi.it/flex_inc
http://twitter.com//loziosecchi
-->

<!--- The default skin class for the last button in a Luna ButtonBar component.  

@see spark.components.ButtonBar
@see spark.components.ButtonBarButton

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
				   minWidth="21" minHeight="21" 
				   alpha.disabled="0.5">
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.ButtonBarButton")]
		]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized. 
		For toggle button, the graphics are colorized but the label is not. */
		static private const exclusions:Array = ["labelDisplay"];
		
		/** 
		 *  @private
		 */     
		override public function get colorizeExclusions():Array {return exclusions;}
		
		/**
		 *  @private
		 */
		override protected function initializationComplete():void
		{
			useChromeColor = true;
			super.initializationComplete();
		}
		
		/**
		 *  @private
		 */
		override protected function updateDisplayList(unscaledWidth:Number, unscaleHeight:Number):void
		{
			var cr:Number = getStyle("cornerRadius");
			
			if (cornerRadius != cr)
			{
				cornerRadius = cr;
				shadow.topRightRadiusX = cornerRadius;
				shadow.bottomRightRadiusX = cornerRadius;
				fill.topRightRadiusX = cornerRadius;
				fill.bottomRightRadiusX = cornerRadius;
				lowlight.topRightRadiusX = cornerRadius;
				lowlight.bottomRightRadiusX = cornerRadius;
				highlightStroke.topRightRadiusX = cornerRadius;
				highlightStroke.bottomRightRadiusX = cornerRadius;
				border.topRightRadiusX = cornerRadius;
				border.bottomRightRadiusX = cornerRadius;
			}
			
			super.updateDisplayList(unscaledWidth, unscaledHeight);
		}
		
		private var cornerRadius:Number = 2;
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
	</s:states>
	
	<s:Group left="0" right="-1" top="-1" bottom="-1">
		
		<!-- layer 1: shadow -->
		<!--- @private -->
		<s:Rect id="shadow" left="0" right="0" top="0" bottom="0" width="69" height="20" topRightRadiusX="2" bottomRightRadiusX="2">
			<s:stroke>
				<s:LinearGradientStroke rotation="90">
					<s:GradientEntry color="0x000000" 
									 color.downStates="0xFFFFFF"
									 alpha="0.01"
									 alpha.downStates="0" />
					<s:GradientEntry color="0x000000" 
									 color.downStates="0xFFFFFF" 
									 alpha="0.07"
									 alpha.downStates="0.5" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>
		
		<!-- layer 2: fill -->
		<!--- @private -->
		<s:Rect id="fill" left="1" right="2" top="2" bottom="2" topRightRadiusX="2" bottomRightRadiusX="2">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xf5f5f5" 
									 color.over="0xf7f7f7"
									 color.down="0xbababa"
									 color.upAndSelected="0xbdbdbd"
									 color.overAndSelected="0xc8c8c8"
									 color.downAndSelected="0xf5f5f5"/> 
					<s:GradientEntry color="0xdddddd" 
									 color.over="0xe5e5e5" 
									 color.down="0xd4d4d4"
									 color.upAndSelected="0xd6d6d6"
									 color.overAndSelected="0xdcdcdc"
									 color.downAndSelected="0xdddddd"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<!-- layer 3: fill lowlight -->
		<!--- @private -->
		<s:Rect id="lowlight" left="1" right="2" top="2" bottom="2" topRightRadiusX="2" bottomRightRadiusX="2">
			<s:fill>
				<s:LinearGradient rotation="270">
					<s:GradientEntry color="0x000000" ratio="0.0" alpha="0.0627" />
					<s:GradientEntry color="0x000000" ratio="0.48" alpha="0.0099" />
					<s:GradientEntry color="0x000000" ratio="0.48001" alpha="0" />
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<!-- layer 4: highlight stroke (all states except down) -->
		<!--- @private -->
		<s:Rect id="highlightStroke" left="1" right="2" top="2" bottom="2" topRightRadiusX="2" bottomRightRadiusX="2"
				excludeFrom="downStates">
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="1">
					<s:GradientEntry color="0xFFFFFF" alpha.overStates="0.22" alpha.selectedUpStates="0.33" />
					<s:GradientEntry color="0xD8D8D8" alpha.overStates="0.22" alpha.selectedUpStates="0.33" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>

		<!-- layer 5: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
		<!--- @private -->
		<s:Rect id="border" left="0" right="1" top="1" bottom="1" topRightRadiusX="2" bottomRightRadiusX="2">
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="1">
					<s:GradientEntry color="0x000000"
									 alpha=".2" alpha.down=".35"/>
					<s:GradientEntry color="0x000000"
									 alpha=".3" alpha.down=".25"/>
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>
	</s:Group>
	
	<!-- layer 6: text -->
	<!---  @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	<s:Label id="labelDisplay"
			 textAlign="center"
			 verticalAlign="middle"
			 maxDisplayedLines="1"
			 horizontalCenter="0" verticalCenter="1"
			 left="10" right="10" top="2" bottom="2">
	</s:Label>
	
</s:SparkButtonSkin>