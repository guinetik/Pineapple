<?xml version="1.0" encoding="utf-8"?>

<!--
FlexInc. 2012
http://www.loziosecchi.it/flex_inc
http://twitter.com//loziosecchi
-->

<!--- The default skin class for the up button of a Luna NumericStepper component.  

@see spark.components.NumericStepper

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009">
	
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.Button")]
		]]>
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized. 
		For NumericStepper buttons, the graphics are colorized but the arrow is not. */
		static private const exclusions:Array = ["arrow"];
		
		/**
		 * @private
		 */
		override public function get colorizeExclusions():Array {return exclusions;}
		
		/* Define the symbol fill items that should be colored by the "symbolColor" style. */
		static private const symbols:Array = ["arrowFill"];
		
		/**
		 *  @private
		 */
		override public function get symbolItems():Array {return symbols};
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			useChromeColor = true;
			super.initializationComplete();
		}
		
		/**
		 *  @private
		 */
		override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
		{
			var cr:Number = getStyle("cornerRadius");
			
			if (cornerRadius != cr)
			{
				cornerRadius = cr;
				fill.topRightRadiusX = cornerRadius;
				highlight.topRightRadiusX = cornerRadius;
			}
			
			super.updateDisplayList(unscaledWidth, unscaledHeight);
		}
		
		private var cornerRadius:Number = 2;
	</fx:Script>
	
	<s:states>
		<s:State name="up" />
		<s:State name="over"/>
		<s:State name="down" />
		<s:State name="disabled" />
	</s:states>
	
	<s:Group left="0" top="0" right="0" bottom="0">
		
		<!-- border/fill -->
		<!--- @private -->
		<s:Rect id="fill" left="0" top="0" right="0" bottom="0" width="18" height="16" topRightRadiusX="2">
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="1">
					<s:GradientEntry color="0x000000"
									 alpha=".4" alpha.down=".35"/>
					<s:GradientEntry color="0x000000"
									 alpha=".45" alpha.down=".25"/>
				</s:LinearGradientStroke>
			</s:stroke>
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xf5f5f5" 
									 color.over="0xf7f7f7" 
									 color.down="0xbababa" />
					<s:GradientEntry color="0xdddddd" 
									 color.over="0xe5e5e5" 
									 color.down="0xd4d4d4" />
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<!-- highlight -->
		<!--- @private -->
		<s:Rect id="highlight" left="1" top="1" right="1" bottom="1" topRightRadiusX="2">
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="1">
					<s:GradientEntry color="0xFFFFFF" 
									 color.down="0x000000" 
									 alpha=".95"
									 alpha.over="0.6" 
									 alpha.down="0.15" />
					<s:GradientEntry color="0xFFFFFF" 
									 color.down="0x000000"
									 alpha="0.5"
									 alpha.over="0.3"
									 alpha.down="0" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>
		
		<!-- shadow -->
		<s:Rect left="1" top="2" right="1" height="1" includeIn="down">
			<s:fill>
				<s:SolidColor color="0x000000" alpha="0.07" />
			</s:fill>
		</s:Rect>   
	</s:Group>
	
	<!-- arrow -->
	<!--- Defines the appearance of the up arrow. -->
	<s:Path horizontalCenter="0" verticalCenter="0" id="arrow"
			data="M 3.0 0.0 L 3.0 1.0 L 4.0 1.0 L 4.0 2.0 L 5.0 2.0 L 5.0 3.0 L 0.0 3.0 L 0.0 2.0 L 1.0 2.0 L 1.0 1.0 L 2.0 1.0 L 2.0 0.0 L 3.0 0.0">
		<s:fill>
			<!--- @private
			Defines the up arrow's fill. The default color is 0x000000. The default alpha is .8. -->
			<s:SolidColor id="arrowFill" color="0" alpha="0.8" />
		</s:fill>
	</s:Path>            
	
</s:SparkSkin>