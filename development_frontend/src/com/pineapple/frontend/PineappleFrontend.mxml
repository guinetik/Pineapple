<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   width="100%" height="100%"
			   initialize="onInit(event)"
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" xmlns:views="com.pineapple.frontend.views.*" xmlns:ns="http://code.google.com/p/flexlib/">
	
	<fx:Style source="lunaBaseSet.css"/>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.pineapple.business.events.AccessEvent;
			import com.pineapple.business.model.UserType;
			import com.pineapple.business.repository.LoginRepository;
			
			import flash.utils.setTimeout;
			
			import mx.events.FlexEvent;
			import mx.managers.CursorManager;
			
			private static var instance:PineappleFrontend;
			
			protected function onInit(event:FlexEvent):void
			{
				
				this.styleName = "lunaGreen";
				instance = this;
				loginBox.addEventListener(AccessEvent.ACCESS_GRANTED, onAccessGranted);
				
			}
			
			public static function getInstance():PineappleFrontend
			{
				
				return instance;
				
			}
			
			protected function onAccessGranted(event:AccessEvent):void
			{
				
				mLoader.moduleFactory = this.moduleFactory;
				
				switch(LoginRepository.getInstance().loggedUser.entidade)
				{
					case UserType.USER_ALUNO:
					{
						
						mLoader.url="com/pineapple/frontend/views/perspectives/aluno/HomeAluno.swf";
						mLoader.loadModule();
						break;
						
					}
						
					case UserType.USER_PROFESSOR:
					{
						
						mLoader.url="com/pineapple/frontend/views/perspectives/professor/HomeProfessor.swf";
						mLoader.loadModule();
						break;
						
					}
						
					case UserType.USER_ADMINISTRADOR:
					{
						
						mLoader.url="com/pineapple/frontend/views/perspectives/admin/HomeAdmin.swf";
						mLoader.loadModule();
						break;
						
					}
						
				}
				
				LoginRepository.getInstance().addEventListener(AccessEvent.USER_LOGOUT, onLogout);
				
				this.loginBox.visible = false;
				
			}
			
			protected function onLoading(event:Event):void
			{
				
				setTimeout(function():void
				{
					CursorManager.removeBusyCursor();
				}, 1000);
				
			}
			
			protected function onLogout(event:Event):void
			{
				
				mLoader.unloadModule();
				loginBox.visible = true;
				
			}
			
		]]>
	</fx:Script>
	
	<mx:ColorPicker visible="false"/>
	
	<views:LoginBox verticalCenter="1"
					horizontalCenter="1"
					id="loginBox"/>
	
	<s:ModuleLoader id="mLoader"
					width="100%"
					height="100%"
					ready="onLoading(event)"/>
	
</s:Application>
